Traceback (most recent call last):
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/asyncio/base_events.py", line 616, in run_until_complete
    return future.result()
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
logistics.show_map(logistics.base_map)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mAttributeError[0m                            Traceback (most recent call last)
Cell [0;32mIn[3], line 1[0m
[0;32m----> 1[0m [43mlogistics[49m[38;5;241;43m.[39;49m[43mshow_map[49m[43m([49m[43mlogistics[49m[38;5;241;43m.[39;49m[43mbase_map[49m[43m)[49m

File [0;32m/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/gtbook/logistics.py:31[0m, in [0;36mshow_map[0;34m(image, markers, file, marker)[0m
[1;32m     29[0m [38;5;28;01mdef[39;00m [38;5;21mshow_map[39m(image[38;5;241m=[39m[38;5;28;01mNone[39;00m, markers[38;5;241m=[39m[38;5;28;01mNone[39;00m, file: [38;5;28mstr[39m [38;5;241m=[39m [38;5;28;01mNone[39;00m, marker[38;5;241m=[39m{}):
[1;32m     30[0m [38;5;250m    [39m[38;5;124;03m"""Show image on warehouse map, possibly with markers"""[39;00m
[0;32m---> 31[0m     fig [38;5;241m=[39m [43mpx[49m[38;5;241;43m.[39;49m[43mimshow[49m[43m([49m[43mimage[49m[43m,[49m[43m [49m[43mcolor_continuous_scale[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mOranges[39;49m[38;5;124;43m'[39;49m[43m,[49m
[1;32m     32[0m [43m                    [49m[43morigin[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mlower[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43maspect[49m[38;5;241;43m=[39;49m[38;5;124;43m'[39;49m[38;5;124;43mequal[39;49m[38;5;124;43m'[39;49m[43m,[49m[43m [49m[43mrange_color[49m[38;5;241;43m=[39;49m[43m[[49m[38;5;241;43m0[39;49m[43m,[49m[43m [49m[38;5;241;43m1[39;49m[43m][49m[43m)[49m
[1;32m     33[0m     [38;5;28;01mif[39;00m markers [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:
[1;32m     34[0m         fig[38;5;241m.[39madd_scatter(x[38;5;241m=[39mmarkers[:, [38;5;241m0[39m], y[38;5;241m=[39mmarkers[:, [38;5;241m1[39m],
[1;32m     35[0m                         mode[38;5;241m=[39m[38;5;124m"[39m[38;5;124mmarkers[39m[38;5;124m"[39m, marker[38;5;241m=[39mmarker)

File [0;32m/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/plotly/express/_imshow.py:354[0m, in [0;36mimshow[0;34m(img, zmin, zmax, origin, labels, x, y, animation_frame, facet_col, facet_col_wrap, facet_col_spacing, facet_row_spacing, color_continuous_scale, color_continuous_midpoint, range_color, title, template, width, height, aspect, contrast_rescaling, binary_string, binary_backend, binary_compression_level, binary_format, text_auto)[0m
[1;32m    351[0m     binary_string [38;5;241m=[39m img[38;5;241m.[39mndim [38;5;241m>[39m[38;5;241m=[39m ([38;5;241m3[39m [38;5;241m+[39m slice_dimensions) [38;5;129;01mand[39;00m [38;5;129;01mnot[39;00m is_dataframe
[1;32m    353[0m [38;5;66;03m# Cast bools to uint8 (also one byte)[39;00m
[0;32m--> 354[0m [38;5;28;01mif[39;00m img[38;5;241m.[39mdtype [38;5;241m==[39m [43mnp[49m[38;5;241;43m.[39;49m[43mbool[49m:
[1;32m    355[0m     img [38;5;241m=[39m [38;5;241m255[39m [38;5;241m*[39m img[38;5;241m.[39mastype(np[38;5;241m.[39muint8)
[1;32m    357[0m [38;5;28;01mif[39;00m range_color [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m [38;5;28;01mNone[39;00m:

File [0;32m/usr/share/miniconda/envs/gtbook/lib/python3.8/site-packages/numpy/__init__.py:305[0m, in [0;36m__getattr__[0;34m(attr)[0m
[1;32m    300[0m     warnings[38;5;241m.[39mwarn(
[1;32m    301[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;124mIn the future `np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[38;5;124m` will be defined as the [39m[38;5;124m"[39m
[1;32m    302[0m         [38;5;124m"[39m[38;5;124mcorresponding NumPy scalar.[39m[38;5;124m"[39m, [38;5;167;01mFutureWarning[39;00m, stacklevel[38;5;241m=[39m[38;5;241m2[39m)
[1;32m    304[0m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __former_attrs__:
[0;32m--> 305[0m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr])
[1;32m    307[0m [38;5;66;03m# Importing Tester requires importing all of UnitTest which is not a[39;00m
[1;32m    308[0m [38;5;66;03m# cheap import Since it is mainly used in test suits, we lazy import it[39;00m
[1;32m    309[0m [38;5;66;03m# here to save on the order of 10 ms of import time for most users[39;00m
[1;32m    310[0m [38;5;66;03m#[39;00m
[1;32m    311[0m [38;5;66;03m# The previous way Tester was imported also had a side effect of adding[39;00m
[1;32m    312[0m [38;5;66;03m# the full `numpy.testing` namespace[39;00m
[1;32m    313[0m [38;5;28;01mif[39;00m attr [38;5;241m==[39m [38;5;124m'[39m[38;5;124mtesting[39m[38;5;124m'[39m:

[0;31mAttributeError[0m: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
AttributeError: module 'numpy' has no attribute 'bool'.
`np.bool` was a deprecated alias for the builtin `bool`. To avoid this error in existing code, use `bool` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.bool_` here.
The aliases was originally deprecated in NumPy 1.20; for more details and guidance see the original release note at:
    https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations

